// <auto-generated />
using System;
using FourSix.Controllers.Gateways.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FourSix.Controllers.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240514010920_CreateMicroservice")]
    partial class CreateMicroservice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroPedido"));

                    b.Property<short>("StatusId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Pedido", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            ClienteId = new Guid("717b2fb9-4bbe-4a8c-8574-7808cd652e0b"),
                            DataPedido = new DateTime(2024, 5, 13, 17, 9, 20, 269, DateTimeKind.Local).AddTicks(5522),
                            NumeroPedido = 1,
                            StatusId = (short)1
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.PedidoCheckout", b =>
                {
                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataStatus")
                        .HasColumnType("datetime2");

                    b.Property<short>("StatusId")
                        .HasColumnType("smallint");

                    b.HasKey("PedidoId", "Sequencia");

                    b.HasIndex("StatusId");

                    b.ToTable("PedidoCheckout", (string)null);

                    b.HasData(
                        new
                        {
                            PedidoId = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            Sequencia = 0,
                            DataStatus = new DateTime(2024, 5, 13, 17, 9, 20, 269, DateTimeKind.Local).AddTicks(5522),
                            StatusId = (short)1
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.PedidoItem", b =>
                {
                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("PedidoId", "ProdutoId");

                    b.ToTable("PedidoItem", (string)null);

                    b.HasData(
                        new
                        {
                            PedidoId = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            ProdutoId = new Guid("63c776f5-4539-478e-a17a-54d3a1c2d3ee"),
                            Observacao = "Sem tomate",
                            Quantidade = 2,
                            ValorUnitario = 5.5m
                        },
                        new
                        {
                            PedidoId = new Guid("78e3b8d0-be9a-4407-9304-c61788797808"),
                            ProdutoId = new Guid("9482fcf0-e9e4-4bdc-869f-ad7d1d15016c"),
                            Quantidade = 1,
                            ValorUnitario = 8.25m
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.StatusPedido", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("StatusPedido", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Descricao = "Criado"
                        },
                        new
                        {
                            Id = (short)2,
                            Descricao = "Aguardando Pagamento"
                        },
                        new
                        {
                            Id = (short)4,
                            Descricao = "Em Preparação"
                        },
                        new
                        {
                            Id = (short)5,
                            Descricao = "Pronto"
                        },
                        new
                        {
                            Id = (short)6,
                            Descricao = "Finalizado"
                        },
                        new
                        {
                            Id = (short)7,
                            Descricao = "Cancelado"
                        });
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.Pedido", b =>
                {
                    b.HasOne("FourSix.Domain.Entities.PedidoAggregate.StatusPedido", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.PedidoCheckout", b =>
                {
                    b.HasOne("FourSix.Domain.Entities.PedidoAggregate.Pedido", null)
                        .WithMany("HistoricoCheckout")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FourSix.Domain.Entities.PedidoAggregate.StatusPedido", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.PedidoItem", b =>
                {
                    b.HasOne("FourSix.Domain.Entities.PedidoAggregate.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FourSix.Domain.Entities.PedidoAggregate.Pedido", b =>
                {
                    b.Navigation("HistoricoCheckout");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
